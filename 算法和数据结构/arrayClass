package array;

public class ArrayTest1 {
    // 程序的执行入口
    public static void main(String[] args) {
        ArrayClass arrayClass = new ArrayClass(100);

        // 新增数组元素
        arrayClass.insert(11);
        arrayClass.insert(23);
        arrayClass.insert(45);
        arrayClass.insert(21);
        arrayClass.insert(66);
        arrayClass.insert(44);
        arrayClass.insert(77);
        arrayClass.insert(99);
        arrayClass.insert(88);

        // 显示一下各个新增的数据
        arrayClass.display();

        // 删除数据77
        arrayClass.delete(77);
        arrayClass.display();

        // 查找数据
        System.out.println(arrayClass.find(44));

    }

}

// 创建一个封装数组的类
class ArrayClass {

    private long[] arr;// 定义一个长整型的数字
    private int nElems;// 数组中元素存在的个数，当前的数组的长度

    // 通过数组类的构造方法初始化
    public ArrayClass(int maxSize) {// maxSize是数组的最大长度
        arr = new long[maxSize];// 初始化被封装的数组
        nElems = 0;// 初始化元素
    }

    // 新增数据项，数组元素
    public void insert(long data) {
        arr[nElems] = data;
        nElems++;
    }

    // 查找某一特定的数据项
    // 找到就返回true，没有找到就返回false
    public boolean find(long searchData) {
        int i;// i相当于是索引
        for (i = 0; i < nElems; i++) {
            if (searchData == arr[i]) {
                break;// 找到之间终止循环，这个时候，i=被知道到的数据对象元素的索引值
            }

        }
        if (i == nElems) {
            return false;// 没有渣都到指定的数据
        } else {
            return true;
        }
    }

    // 删除指定的数据项
    public void delete(long targetDate) {
        // 首先要找到要删除的数据
        int i;// i相当于是索引
        for (i = 0; i < nElems; i++) {
            if (targetDate == arr[i]) {
                break;// 找到之间终止循环，这个时候，i=被知道到的数据对象元素的索引值
            }
        }
        if (i == nElems) {
            System.out.println("没有要知道到要删除是数据:" + targetDate);
        } else {
            for (int j = i; j < nElems; j++) {
                arr[j] = arr[j + 1];
            }
            nElems--;
        }

    }

    // 遍历数据结构中的各个数据项
    public void display() {
        for (int i = 0; i < nElems; i++) {
            System.out.print(arr[i] + " ");

        }
        System.out.println();

    }

}
